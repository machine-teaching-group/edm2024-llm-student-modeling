You are working on the visual programming domain Classic Maze Challenge from https://code.org/ 
In this domain, the following types of coding blocks are available.
- Basic navigation blocks: moveForward, turnLeft, turnRight.
- Boolean conditions: pathAhead, pathLeft, pathRight, goal
- Loops: RepeatUntil(boolean){}
- Conditionals: If(boolean){}, If(boolean){}Else{}.

A task is represented as a 10x10 visual grid.
This grid contains WALL cells, FREE cells, a GOAL cell, and an AVATAR (with specific location and direction).
We represent a task's 10x10 visual grid with the following symbols.
'#' represents a WALL cell.
'+' represents the GOAL cell.
'>' represents AVATAR's location on a cell, facing East direction.
'<' represents AVATAR's location on a cell, facing West direction.
'^' represents AVATAR's location on a cell, facing North direction.
'v' represents AVATAR's location on a cell, facing South direction.
A solution code for a task brings the AVATAR to the GOAL when executed. Note that the AVATAR can only move between FREE cells and will crash if it tries to go to a WALL cell.

First, I give you below a reference task, its solution code, and an attempt code from a student on the reference task. Observe and explain the student's behavior and misconceptions in the attempt code.

Second, I give you a new target task with its solution code. You are going to play the role of the given student. Synthesize an attempt code that is likely to be written by the same student, i.e capturing the student's behavior and misconceptions shown on the reference task.

--- Reference Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	.	#	#	#	#	#	#	#	
5	+	.	.	.	.	.	.	#	#	#	
6	#	#	#	.	#	#	.	#	#	#	
7	#	#	#	.	#	#	.	#	#	#	
8	#	#	#	#	#	#	.	#	#	#	
9	#	#	#	#	#	>	.	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Reference Task 1: Solution ---
def Run(){
	RepeatUntil(goal){
		If(pathAhead){
			moveForward
		}
		Else{
			turnLeft
		}
	}
}

--- Reference Task 1: Student attempt ---
def Run(){
	moveForward
	turnLeft
	moveForward
	moveForward
	moveForward
	moveForward
	turnLeft
	moveForward
	moveForward
	moveForward
	moveForward
	moveForward
	moveForward
}

--- Target Task 1: Grid ---
1	#	#	#	.	#	#	#	#	#	#	
2	.	.	.	.	#	#	#	#	#	#	
3	.	#	#	.	#	#	#	#	#	#	
4	^	#	#	.	#	#	#	#	#	#	
5	#	#	#	.	#	#	#	#	#	#	
6	.	.	.	.	#	#	#	#	#	#	
7	#	#	#	.	#	#	#	#	#	#	
8	#	#	#	+	#	#	#	#	#	#	
9	#	#	#	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Target Task 1: Solution ---
def Run(){
	RepeatUntil(goal){
		If(pathAhead){
			moveForward
		}
		Else{
			turnRight
		}
	}
}

--- Target Task 1: Student attempt ---
In the reference task, the student's behavior and misconceptions in the attempt code can be observed as follows:

1. Lack of Conditional Loop: The reference solution uses a `RepeatUntil(goal)` loop to repeatedly execute a set of instructions until the goal is reached. However, in the student's attempt, there is no such loop. Instead, the student has a sequence of `moveForward` and `turnLeft` commands without any conditional logic to check if there is a path ahead or if the goal has been reached. This shows a misunderstanding of the need for a loop to keep checking and moving until the goal is achieved.

2. Inadequate Turning: The reference solution uses the `turnLeft` command when there is no path ahead, indicating that the avatar should explore by turning left when it encounters a wall. However, in the student's attempt, the avatar only turns left once and continues moving forward repeatedly. This shows that the student did not grasp the idea of turning to explore alternative paths.

3. Lack of Goal Awareness: In the reference solution, the `RepeatUntil(goal)` loop checks if the goal is reached, and if not, it continues to navigate. In the student's attempt, there is no awareness of the goal, and the avatar continues moving forward indefinitely without ever considering if it has reached the goal.

Now, let's create an attempt code for the target task, assuming the same student is attempting it, capturing the same behavior and misconceptions:

--- Target Task 1: Student attempt (Synthesized) ---
```python
def Run(){
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
    moveForward
}
```

In this synthesized attempt for the target task, the student continues to demonstrate the same misconceptions observed in the reference task's attempt:

1. Lack of Conditional Loop: The student still doesn't incorporate a conditional loop (`RepeatUntil(goal)`) in their code, meaning they do not check if they have reached the goal before stopping.

2. Inadequate Turning: Similar to the reference task, the student doesn't incorporate turning logic to explore different directions when encountering obstacles or walls. They just keep moving forward.

3. Lack of Goal Awareness: There is no check for the goal in the code, and the avatar continues to move forward endlessly without considering if it has reached the goal.

This synthesized attempt reflects the student's persistent misunderstandings and misconceptions about how to approach maze navigation tasks.