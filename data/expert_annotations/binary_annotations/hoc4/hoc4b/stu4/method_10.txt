You are working on the visual programming domain Classic Maze Challenge from https://code.org/ 
In this domain, the following types of coding blocks are available.
- Basic navigation blocks: moveForward, turnLeft, turnRight.
- Boolean conditions: pathAhead, pathLeft, pathRight, goal
- Loops: RepeatUntil(boolean){}
- Conditionals: If(boolean){}, If(boolean){}Else{}.

A task is represented as a 10x10 visual grid.
This grid contains WALL cells, FREE cells, a GOAL cell, and an AVATAR (with specific location and direction).
We represent a task's 10x10 visual grid with the following symbols.
'#' represents a WALL cell.
'+' represents the GOAL cell.
'>' represents AVATAR's location on a cell, facing East direction.
'<' represents AVATAR's location on a cell, facing West direction.
'^' represents AVATAR's location on a cell, facing North direction.
'v' represents AVATAR's location on a cell, facing South direction.
A solution code for a task brings the AVATAR to the GOAL when executed. Note that the AVATAR can only move between FREE cells and will crash if it tries to go to a WALL cell.

First, I give you below a reference task, its solution code, and an attempt code from a student on the reference task. Observe and explain the student's behavior and misconceptions in the attempt code.

Second, I give you a new target task with its solution code. You are going to play the role of the given student. Synthesize an attempt code that is likely to be written by the same student, i.e capturing the student's behavior and misconceptions shown on the reference task.

--- Reference Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	#	#	#	#	#	#	#	#	
5	#	#	#	#	.	+	#	#	#	#	
6	#	#	#	>	.	#	#	#	#	#	
7	#	#	#	#	#	#	#	#	#	#	
8	#	#	#	#	#	#	#	#	#	#	
9	#	#	#	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Reference Task 1: Solution ---
def Run(){
	moveForward
	turnLeft
	moveForward
	turnRight
	moveForward
}

--- Reference Task 1: Student attempt ---
def Run(){
	moveForward
	moveForward
	moveForward
	turnLeft
	moveForward
	moveForward
	moveForward
	moveForward
	turnRight
	moveForward
}

--- Target Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	#	#	#	#	#	#	#	#	
5	#	#	#	#	#	#	#	#	#	#	
6	#	#	v	#	#	#	#	#	#	#	
7	+	#	.	#	#	#	#	#	#	#	
8	.	.	.	#	#	#	#	#	#	#	
9	.	#	.	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Target Task 1: Solution ---
def Run(){
	moveForward
	moveForward
	turnRight
	moveForward
	moveForward
	turnRight
	moveForward
}

--- Target Task 1: Student attempt ---
The student attempt for the reference task 1 shows several misconceptions and misunderstandings. Here are some observations:

The student has repeated the "moveForward" command three times in a row without turning or changing direction. This indicates that they may not understand the concept of a maze and how to navigate through one.
After turning left, the student has moved forward again without checking if there is a wall or not. This suggests that they may not have understood the importance of checking for walls before moving forward.
The student has turned right after moving forward twice, which is incorrect because it will make the avatar face south instead of north.
Finally, the student has repeated the "moveForward" command four times in a row without any turns, which will make the avatar crash into the wall.
Based on these observations, it seems like the student may need more practice understanding the basic concepts of navigating a maze and using conditionals to avoid obstacles. They also seem to lack patience and planning, as they have not taken the time to think about the consequences of their actions and have instead relied on trial and error.

Now, let's synthesize an attempt code for the target task 1 that reflects the student's behavior and misconceptions. Here's what it might look like:

def Run(){
    moveForward
    moveForward
    turnLeft
    moveForward
    moveForward
    turnRight
    moveForward
    moveForward
    turnRight
    moveForward
}
In this attempt code, we can see that the student has repeated the "moveForward" command multiple times without checking for walls or turning. They have also turned left and then immediately turned right, which is incorrect because it makes the avatar face south instead of north. Additionally, the student has not used any conditionals to check for walls or goal cells, which means they are relying solely on trial and error to solve the task. Overall, this attempt code demonstrates the same misconceptions and misunderstandings as the previous attempt code.