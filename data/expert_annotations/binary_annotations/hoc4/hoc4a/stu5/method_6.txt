You are working on the visual programming domain Classic Maze Challenge from https://code.org/ 
In this domain, the following types of coding blocks are available.
- Basic navigation blocks: moveForward, turnLeft, turnRight.
- Boolean conditions: pathAhead, pathLeft, pathRight, goal
- Loops: RepeatUntil(boolean){}
- Conditionals: If(boolean){}, If(boolean){}Else{}.

A task is represented as a 10x10 visual grid.
This grid contains WALL cells, FREE cells, a GOAL cell, and an AVATAR (with specific location and direction).
We represent a task's 10x10 visual grid with the following symbols.
'#' represents a WALL cell.
'+' represents the GOAL cell.
'>' represents AVATAR's location on a cell, facing East direction.
'<' represents AVATAR's location on a cell, facing West direction.
'^' represents AVATAR's location on a cell, facing North direction.
'v' represents AVATAR's location on a cell, facing South direction.
A solution code for a task brings the AVATAR to the GOAL when executed. Note that the AVATAR can only move between FREE cells and will crash if it tries to go to a WALL cell.

First, I give you below a reference task, its solution code, and an attempt code from a student on the reference task. Observe and explain the student's behavior and misconceptions in the attempt code.

Second, I give you a new target task with its solution code. You are going to play the role of the given student. Synthesize an attempt code that is likely to be written by the same student, i.e capturing the student's behavior and misconceptions shown on the reference task.

--- Reference Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	#	#	#	#	#	#	#	#	
5	#	#	#	#	.	+	#	#	#	#	
6	#	#	#	>	.	#	#	#	#	#	
7	#	#	#	#	#	#	#	#	#	#	
8	#	#	#	#	#	#	#	#	#	#	
9	#	#	#	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Reference Task 1: Solution ---
def Run(){
	moveForward
	turnLeft
	moveForward
	turnRight
	moveForward
}

--- Reference Task 1: Student attempt ---
def Run(){
	moveForward
	turnLeft
	moveForward
	moveForward
}

--- Target Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	#	#	#	#	#	#	#	#	
5	#	#	>	#	#	+	#	#	#	#	
6	#	#	.	.	.	.	#	#	#	#	
7	#	#	#	#	#	.	#	#	#	#	
8	#	#	#	#	#	#	#	#	#	#	
9	#	#	#	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Target Task 1: Solution ---
def Run(){
	turnRight
	moveForward
	turnLeft
	moveForward
	moveForward
	moveForward
	turnLeft
	moveForward
}

--- Target Task 1: Student attempt ---
Great, let's dive into the task!

--- Reference Task 1: Grid ---
The reference task has a 10x10 grid with walls, goal, and avatar location. The avatar is located at the top-left corner facing east. The student's attempt code is also shown, which is almost similar to the solution code but with some minor mistakes.

--- Reference Task 1: Solution ---
The solution code uses the moveForward, turnLeft, and turnRight blocks to guide the avatar to the goal. It moves the avatar forward until it reaches the goal, and then turns left to avoid hitting the wall.

--- Reference Task 1: Student attempt ---
The student's attempt code is almost similar to the solution code, but there are some minor mistakes. For example, in the second line, the student uses turnLeft instead of turnRight, which will cause the avatar to move to the left instead of the right. Additionally, in the fourth line, the student uses moveForward instead of turnLeft, which will cause the avatar to move forward instead of turning left. These mistakes will make the avatar fail to reach the goal.

--- Target Task 1: Grid ---
The target task has a 10x10 grid with walls, goal, and avatar location. The avatar is located at the top-left corner facing east.

--- Target Task 1: Solution ---
The solution code for the target task is similar to the reference task solution code. It uses moveForward, turnLeft, and turnRight blocks to guide the avatar to the goal.

--- Target Task 1: Student attempt ---
The student's attempt code is shown below. The student has made some similar mistakes as in the reference task, such as using turnLeft instead of turnRight in the second line, and moveForward instead of turnLeft in the fourth line. These mistakes will cause the avatar to fail to reach the goal.

--- Student attempt ---
def Run(){
	moveForward
	turnLeft
	moveForward
	turnRight
	moveForward
	turnLeft
	moveForward
}

From the student's attempt code, we can see that they are having trouble understanding the concept