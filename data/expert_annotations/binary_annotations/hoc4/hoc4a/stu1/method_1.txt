You are working on the visual programming domain Classic Maze Challenge from https://code.org/ 
In this domain, the following types of coding blocks are available.
- Basic navigation blocks: moveForward, turnLeft, turnRight.
- Boolean conditions: pathAhead, pathLeft, pathRight, goal
- Loops: RepeatUntil(boolean){}
- Conditionals: If(boolean){}, If(boolean){}Else{}.

A task is represented as a 10x10 visual grid.
This grid contains WALL cells, FREE cells, a GOAL cell, and an AVATAR (with specific location and direction).
We represent a task's 10x10 visual grid with the following symbols.
'#' represents a WALL cell.
'+' represents the GOAL cell.
'>' represents AVATAR's location on a cell, facing East direction.
'<' represents AVATAR's location on a cell, facing West direction.
'^' represents AVATAR's location on a cell, facing North direction.
'v' represents AVATAR's location on a cell, facing South direction.
A solution code for a task brings the AVATAR to the GOAL when executed. Note that the AVATAR can only move between FREE cells and will crash if it tries to go to a WALL cell.

First, I give you below a reference task, its solution code, and an attempt code from a student on the reference task. Observe and explain the student's behavior and misconceptions in the attempt code.

Second, I give you a new target task with its solution code. You are going to play the role of the given student. Synthesize an attempt code that is likely to be written by the same student, i.e capturing the student's behavior and misconceptions shown on the reference task.

--- Reference Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	#	#	#	#	#	#	#	#	
5	#	#	#	#	.	+	#	#	#	#	
6	#	#	#	>	.	#	#	#	#	#	
7	#	#	#	#	#	#	#	#	#	#	
8	#	#	#	#	#	#	#	#	#	#	
9	#	#	#	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Reference Task 1: Solution ---
def Run(){
	moveForward
	turnLeft
	moveForward
	turnRight
	moveForward
}

--- Reference Task 1: Student attempt ---
def Run(){
	moveForward
	turnRight
	moveForward
	turnLeft
	moveForward
}

--- Target Task 1: Grid ---
1	#	#	#	#	#	#	#	#	#	#	
2	#	#	#	#	#	#	#	#	#	#	
3	#	#	#	#	#	#	#	#	#	#	
4	#	#	#	#	#	#	#	#	#	#	
5	#	#	>	#	#	+	#	#	#	#	
6	#	#	.	.	.	.	#	#	#	#	
7	#	#	#	#	#	.	#	#	#	#	
8	#	#	#	#	#	#	#	#	#	#	
9	#	#	#	#	#	#	#	#	#	#	
10	#	#	#	#	#	#	#	#	#	#	

--- Target Task 1: Solution ---
def Run(){
	turnRight
	moveForward
	turnLeft
	moveForward
	moveForward
	moveForward
	turnLeft
	moveForward
}

--- Target Task 1: Student attempt ---
Based on the provided information, let's analyze the student's behavior and misconceptions in the attempt code for the reference task and then synthesize an attempt code for the target task.

**Analysis of the Student's Attempt on the Reference Task:**

1. The student's attempt starts correctly with `moveForward`, which moves the AVATAR one cell forward in its initial direction (East).

2. The second command is `turnRight`, which turns the AVATAR 90 degrees to the right (South), which is not the desired behavior. In the reference task, the solution code uses `turnLeft` after the first `moveForward` to correctly orient the AVATAR.

3. The next command is `moveForward`, which moves the AVATAR one cell forward in its current direction (South). This is not the desired behavior because the AVATAR should have been facing East according to the reference task's goal.

4. The fourth command is `turnLeft`, which turns the AVATAR 90 degrees to the left (East). This is not the correct direction as per the reference task's goal. The AVATAR should already be facing East after the first move.

5. The last command is `moveForward`, which moves the AVATAR one cell forward in its current direction (East). This is also not the desired behavior, as the AVATAR should have already been facing East from the beginning.

**Misconceptions in the Student's Attempt:**

- The student seems to have a misconception about the initial orientation of the AVATAR and the sequence of turning commands required to reach the goal. They incorrectly used `turnRight` instead of `turnLeft` after the first `moveForward`.

- There is also a misconception about the effect of turning commands on the AVATAR's orientation. They used `turnLeft` after the AVATAR was already facing East, which resulted in incorrect behavior.

**Synthesized Attempt Code for the Target Task:**

Given the student's misconceptions observed in the reference task, we can synthesize an attempt code for the target task that captures similar behavior:

```python
def Run(){
    moveForward
    turnRight  // Misconception: Incorrect turning direction
    moveForward
    moveForward
    turnRight  // Misconception: Incorrect turning direction
    moveForward
    moveForward
    moveForward
    turnLeft  // Misconception: Incorrect turning direction
    moveForward
}
```

In this synthesized attempt code, the student repeats similar misconceptions observed in the reference task, including the use of incorrect turning directions and incorrect sequences of turning and moving commands.